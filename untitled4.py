# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aCtJEqlz-VIw15vwooNZjYkkiUirBVAZ
"""

# Commented out IPython magic to ensure Python compatibility.
!git clone https://github.com/Love1117/Machine_learning-Projects.git
# %cd Machine_learning-Projects

!wget "https://github.com/Love1117/Machine_learning-Projects/raw/main/ML-DL_project.zip" -O ML_DL_project.zip
!unzip -q ML_DL_project.zip -d ML_DL_project

!cp -r ML_DL_project/* .

!ls

!git config --global user.email "Lovedayshadrack3@gmail.com"
!git config --global user.name "Love1117"

!git add -A
!git commit -m "Unzipped and added ML_DL_project folders"
!git push https://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@github.com/Love1117/Machine_learning-Projects.git main

!rm ML-DL_project.zip
!git rm ML-DL_project.zip
!git commit -m "Removed old ZIP file"
!git push https://@github.com/Love1117/Machine_learning-Projects.git main

!rm ML-DL_project.zip
!git rm ML-DL_project.zip
!git commit -m "Removed old ZIP file"
!git push https://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@github.com/Love1117/Machine_learning-Projects.git main







!git add -A
!git commit --allow-empty -m "Force refresh commit"
!git push https://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@github.com/Love1117/Machine_learning-Projects.git main



from google.colab import drive
drive.mount("/content/drive")
import pandas as pd
import numpy as np

df = pd.read_csv("/content/drive/My Drive/Colab Notebooks/house_price_main.csv")
df = df.rename(columns={"Area":"Area(sqft)"})
df = df.drop(columns=["Id"])
df = pd.get_dummies(df, drop_first=True, columns=["Location","Condition"], dtype="float")
df["Garage"] = df.Garage.map({"Yes":1, "No":2})
df

x = df.drop(columns=["Price"])
y = df["Price"]

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)

from sklearn.preprocessing import MinMaxScaler
x_train = pd.DataFrame(MinMaxScaler().fit_transform(x_train), columns=x_train.columns)
x_test = pd.DataFrame(MinMaxScaler().fit_transform(x_test), columns=x_test.columns)

from sklearn.linear_model import Lasso
model = Lasso()
model.fit(x_train,y_train)
y_pred = model.predict(x_test)
model.score(x_test, y_test)

